name: "Terraform Plan"

on:
  pull_request:
    paths:
      - "infra/**"
    branches:
      - main
      - develop

permissions:
  id-token: write
  contents: read

env:
  TF_VERSION: "1.6.6"
  TF_WORKING_DIR: "infra/envs/dev"

jobs:
  plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: "Authenticate to GCP via OIDC"
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}
          audience: "https://token.actions.githubusercontent.com"

      - name: "Setup Cloud SDK"
        uses: google-github-actions/setup-gcloud@v2

      - name: "Create terraform.tfvars"
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          cp terraform.tfvars.example terraform.tfvars
          sed -i "s/^org_id\s*=.*/org_id = \"${{ secrets.ORG_ID }}\"/" terraform.tfvars
          sed -i "s/^billing_account\s*=.*/billing_account = \"${{ secrets.BILLING_ACCOUNT }}\"/" terraform.tfvars
          # Ensure labels use underscores instead of hyphens
          sed -i 's/cost-center/cost_center/g' terraform.tfvars
          sed -i 's/managed-by/managed_by/g' terraform.tfvars
          # Keep CI service account enabled (needed for IAM bindings)
          # sed -i 's/^enable_ci_service_account\s*=.*/enable_ci_service_account = false/' terraform.tfvars

      - name: "Terraform Init"
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="prefix=${{ secrets.TF_STATE_PREFIX }}"

      - name: "Terraform Format Check"
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check -recursive

      - name: "Terraform Validate"
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      - name: "Terraform Plan"
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan \
            -var-file="terraform.tfvars" \
            -out=tfplan
        env:
          TF_VAR_org_id: ${{ secrets.ORG_ID }}
          TF_VAR_billing_account: ${{ secrets.BILLING_ACCOUNT }}

      - name: "Upload Terraform Plan"
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.TF_WORKING_DIR }}/tfplan

      # Optionally, add a comment step that reads a saved plan summary if desired
